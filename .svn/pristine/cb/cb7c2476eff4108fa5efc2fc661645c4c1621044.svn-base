package com.rjkx.sk.manager.common.controller;

import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.util.FileCopyUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.rjkx.sk.system.datastructure.Dto;
import com.rjkx.sk.system.datastructure.impl.BaseDto;
import com.rjkx.sk.system.json.JsonHelper;
import com.rjkx.sk.system.utils.FredaUtils;
import com.rjkx.sk.system.web.base.BaseController;

@Controller
@RequestMapping(value = "/commonUpload")
public class CommonUploadController extends BaseController {
	@SuppressWarnings("unchecked")
	@RequestMapping(value = "/upload")
	public String uploadPhoto(HttpServletRequest request, HttpServletResponse response) throws Exception {
		MultipartHttpServletRequest multipartRequest = (MultipartHttpServletRequest) request;

		Map<String, MultipartFile> fileMap = multipartRequest.getFileMap();
		;
		// CommonsMultipartFile file = (CommonsMultipartFile)
		// multipartRequest.getFile("wangEditorH5File");
		List<Object> data = new ArrayList<Object>();
		String fileLastName = "";
		for (Map.Entry<String, MultipartFile> entity : fileMap.entrySet()) {
			fileLastName = entity.getValue().getOriginalFilename().substring(entity.getValue().getOriginalFilename().lastIndexOf("."), entity.getValue().getOriginalFilename().length());

			String newFileName = "/" + System.nanoTime();
			String dateDir = "/" + FredaUtils.getCurDate();
			String realPath = appProperties.getValue("app.upload.other.dir");
			File filePath = new File(realPath + dateDir);
			if (!filePath.exists()) {
				filePath.mkdirs();
			}
			File uploadFile = new File(realPath + dateDir + newFileName + fileLastName);
			FileCopyUtils.copy(entity.getValue().getBytes(), uploadFile);

			Dto dto = new BaseDto();
			dto.put("fileUrl", appProperties.getValue("app.upload.other.saveDir") + dateDir + newFileName + fileLastName);
			data.add(dto);
		}
		super.write(JsonHelper.encodeObject2Json(data), response);
		return null;
	}
}
