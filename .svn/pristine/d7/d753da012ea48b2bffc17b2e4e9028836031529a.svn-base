package com.rjkx.sk.itf.weixin.service.impl;

import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import com.rjkx.sk.itf.common.web.WeiXinItfBaseServiceImpl;
import com.rjkx.sk.itf.weixin.service.WeiXinItfServiceV2Itf;
import com.rjkx.sk.itf.weixin.utils.WeiXinCons;
import com.rjkx.sk.itf.weixin.utils.WeiXinItfV2Utils;
import com.rjkx.sk.itf.weixin.utils.WeiXinUtils;
import com.rjkx.sk.system.datastructure.Dto;
import com.rjkx.sk.system.datastructure.ResultDataBean;
import com.rjkx.sk.system.datastructure.impl.BaseDto;
import com.rjkx.sk.system.ehcache.EhcacheHelper;
import com.rjkx.sk.system.json.JsonHelper;
import com.rjkx.sk.system.utils.FredaUtils;
/**
 * V2.0
  * @ClassName: WeiXinItfServiceV2Impl
  * @Description: TODO
  * @author wkgi-Rally
  * @date 2015年12月3日 下午1:45:13 
  * @version V1.0
 */
@Service(value="weiXinItfServiceV2Impl")
public class WeiXinItfServiceV2Impl extends WeiXinItfBaseServiceImpl implements WeiXinItfServiceV2Itf
{
	private static final String EHCACHE_WX_CODE_TO_OPENID = "EHCACHE_WX_CODE_TO_OPENID"; 
	
	public static final String SYNCHRONIZED_LOCK = "SYN_LOCK";
	
	/*
	  * <p>Title: getOpenId</p>
	  * <p>Description: </p>
	  * @param pDto
	  * @see com.rjkx.sk.itf.weixin.service.impl.WeiXinItfServiceV2Itf#getOpenId(com.rjkx.sk.system.datastructure.Dto)
	  */
	@SuppressWarnings("unchecked")
	@Override
	public Dto getMainUserId(Dto pDto) 
	{
		Dto rDto = new BaseDto();
		try 
		{
			Object wxOpenId = EhcacheHelper.getInstance().get(EHCACHE_WX_CODE_TO_OPENID, pDto.getAsString("wxCode"));
			
			if(FredaUtils.isNotEmpty(wxOpenId))
			{
				rDto.put("wxOpenId", wxOpenId);
			}
			else
			{
				String url = "https://api.weixin.qq.com/sns/oauth2/access_token?"
						+ "appid="+WeiXinCons.WX_APP_ID+""
								+ "&secret="+WeiXinCons.WX_APP_SECRET+""
										+ "&code="+pDto.getAsString("wxCode")+""
												+ "&grant_type=authorization_code";
				//从微信端抓取..然后放入EHCACHE中..
				String openId = JsonHelper.parseSingleJson2Dto(WeiXinItfV2Utils.get(url)).getAsString("openid");
				
				EhcacheHelper.getInstance().put(EHCACHE_WX_CODE_TO_OPENID, pDto.getAsString("wxCode"), openId);
				
				rDto.put("wxOpenId", openId);
			}
			rDto.put("id", rDto.getAsString("wxOpenId"));
			Dto dtoTemp=(Dto)super.getFredaDao().queryForObject("WxV2.getMainUserIdByOpenId",rDto);
			rDto.put("mainUserId", dtoTemp.getAsLong("id"));
			rDto.remove("id");
			int cityId=dtoTemp.getAsInteger("areaId");
			if(cityId<0)
				cityId=2;//地市不确定时，默认为北京
			rDto.put("cityId", cityId);
			rDto.setSuccess(true);
			
			return rDto;
		} 
		catch (Exception e) 
		{
			e.printStackTrace();
			
			rDto.setSuccess(false);
			
			return rDto;
		}
	}
	
	@Override
	public void editReadCount(Dto pDto)
	{
		super.getFredaDao().update("WxV2.editReadCount", pDto);
	}
	/*
	  * <p>Title: enrollLec</p>
	  * <p>Description: </p>
	  * @param pDto
	  * @see com.rjkx.sk.itf.weixin.service.impl.WeiXinItfServiceV2Itf#enrollLec(com.rjkx.sk.system.datastructure.Dto)
	  */
	
	
	@Override
	public boolean enrollLec(Dto pDto)
	{
		if(((Integer)super.getFredaDao().queryForObject("WxV2.queryEnrollCount", pDto)) >= 1)
		{
			return false;
		}
		else
		{
			super.getFredaDao().insert("WxV2.addEnrollLec", pDto);
			
			return true;
		}		
	}
	/*
	  * <p>Title: dianCanForLec</p>
	  * <p>Description: </p>
	  * @param pDto
	  * @see com.rjkx.sk.itf.weixin.service.impl.WeiXinItfServiceV2Itf#dianCanForLec(com.rjkx.sk.system.datastructure.Dto)
	  */
	
	
	@Override
	public boolean dianCanForLec(Dto pDto)
	{
		if(((Integer)super.getFredaDao().queryForObject("WxV2.queryDianZanCount", pDto)) >= 1)
		{
			super.getFredaDao().delete("WxV2.addDianZanLec", pDto);
			
			return false;
		}
		else
		{
			super.getFredaDao().insert("WxV2.delDianZanLec", pDto);
			
			return true;
		}
	}
	/*
	  * <p>Title: createUser</p>
	  * <p>Description: </p>
	  * @param pDto
	  * @see com.rjkx.sk.itf.weixin.service.impl.WeiXinItfServiceV2Itf#createUser(com.rjkx.sk.system.datastructure.Dto)
	  */

	@SuppressWarnings("unchecked")
	@Override
	public String createUser(Dto pDto) 
	{
		if(((Integer)super.getFredaDao().queryForObject("WxV2.queryMainUserCount", pDto)) >= 1)
		{
			return null;
		}
		else
		{
			pDto.put("userPwd", FredaUtils.encryptBasedDes(pDto.getAsString("msgCode")));
			int cityId=-1;
			//根据手机号查询地市和地市id
			String cityName="";
			try{
				cityName=WeiXinUtils.getMobileInfo(pDto.getAsString("mobile"));
				pDto.put("cityName", cityName);
				
				Dto rdto=(Dto)super.getFredaDao().queryForObject("WeiXin.findCityId",pDto);
				if(FredaUtils.isNotEmpty(rdto)&&rdto!=null){
					cityId=rdto.getAsInteger("cityId");
				}
			}catch(Exception e){
			}
			pDto.put("cityId", cityId);
			super.getFredaDao().insert("WxV2.addMainUser", pDto);
			
			return pDto.getAsString("userId");
		}
	}
	/*
	  * <p>Title: addSicknessPat</p>
	  * <p>Description: </p>
	  * @param pDto
	  * @see com.rjkx.sk.itf.weixin.service.impl.WeiXinItfServiceV2Itf#addSicknessPat(com.rjkx.sk.system.datastructure.Dto)
	  */

	@SuppressWarnings("unchecked")
	@Override
	@Transactional(propagation=Propagation.REQUIRED)
	public boolean addSicknessPat(Dto pDto) throws Exception 
	{
		this.setDtoParamsCodeToUtf8(pDto);
		
		String[] sIds = pDto.getAsString("sIds").split(",");
		
		if(((Integer)super.getFredaDao().queryForObject("WxV2.queryCountForAddPat", pDto)) > 0)
		{
			return false;
		}
		//增加就诊人主数据..
		super.getFredaDao().insert("WxV2.addPatForMainUser", pDto);
		//添加病情数据..
		super.getFredaDao().insert("WxV2.addSickInfoForPat", pDto);
		//添加关联疾病数据..
		for(String sId : sIds)
		{
			pDto.put("sId", sId);
			
			super.getFredaDao().insert("WxV2.addSicksForSickInfo", pDto);
		}
		return true;
	}
	/**
	 * 将虽有参数编码转变成UTF-8
	 * @param pDto
	 * @throws UnsupportedEncodingException 
	 */
	private void setDtoParamsCodeToUtf8(Dto pDto) throws UnsupportedEncodingException
	{
		/*Iterator it = pDto.keySet().iterator();
		
		while (it.hasNext())
		{
			String key = (String)it.next();
			
			String value = pDto.getAsString(key);
			
			pDto.put(key, new String(value.getBytes("ISO-8859-1"),"UTF-8"));
		}*/
	}
	/*
	  * <p>Title: myCenterInit</p>
	  * <p>Description: </p>
	  * @param pDto
	  * @see com.rjkx.sk.itf.weixin.service.impl.WeiXinItfServiceV2Itf#myCenterInit(com.rjkx.sk.system.datastructure.Dto)
	  */

	@SuppressWarnings("unchecked")
	@Override
	public Dto myCenterInit(Dto pDto) throws Exception 
	{
		Dto rDto = (Dto) super.getFredaDao().queryForObject("WxV2.getMainUserInfo", pDto);
		
		rDto.put("orderCountList", this.arrangeOrderCountList(super.getFredaContext().getOrderService().orderQuery(pDto).getData()));
		
		return rDto;
	}
	/**
	 * 整理List
	  * 
	  * @author wkgi-Rally
	  * @date 2015年12月8日 上午10:50:01
	  * @param orderCountList
	  * @return
	 */
	@SuppressWarnings("unchecked")
	private List<?> arrangeOrderCountList(List<?> orderCountList)
	{
		List<Dto> data = new ArrayList<Dto>();
		
		for(int i=1;i<=3;i++)
		{
			Dto row = new BaseDto("orderStatus",i);
			
			row.put("orderCount", this.getOrderCount(i,orderCountList));
			
			data.add(row);
		}
		return data;
	}
	/**
	 * 从LIst中获取结果..如果没有则为0
	  * 
	  * @author wkgi-Rally
	  * @date 2015年12月8日 上午10:50:10
	  * @param orderStatus
	  * @return
	 */
	private int getOrderCount(int orderStatus,List<?> orderCountList)
	{
		int count = 0;
		
		for(Object obj : orderCountList)
		{
			Dto row = (Dto)obj;
			
			if(row.getAsInteger("orderStatus") == orderStatus)
			{
				count = row.getAsInteger("orderCount");
			}
		}
		return count;
	}
	/*
	  * <p>Title: delPat</p>
	  * <p>Description: </p>
	  * @param pDto
	  * @see com.rjkx.sk.itf.weixin.service.impl.WeiXinItfServiceV2Itf#delPat(com.rjkx.sk.system.datastructure.Dto)
	  */

	@Override
	public void delPat(Dto pDto) 
	{
		super.getFredaDao().update("WxV2.delPat", pDto);
	}

	/*
	  * <p>Title: zzQueryPageDataInit</p>
	  * <p>Description: </p>
	  * @param pDto
	  * @see com.rjkx.sk.itf.weixin.service.impl.WeiXinItfServiceV2Itf#zzQueryPageDataInit(com.rjkx.sk.system.datastructure.Dto)
	  */
	@SuppressWarnings("unchecked")
	@Override
	public Dto zzQueryPageDataInit(Dto pDto) 
	{
		Dto rDto = new BaseDto();
		
		rDto.put("sickList", super.getFredaDao().queryForList("WxV2.listSickness"));
		
		rDto.put("hosDeptList", super.getFredaDao().queryForList("WxV2.listHosDept"));
		
		rDto.put("hosList", super.getFredaDao().queryForList("WxV2.listHosByCity", pDto));
		
		return rDto;
	}

	/*
	  * <p>Title: queryDoc</p>
	  * <p>Description: </p>
	  * @param pDto
	  * @see com.rjkx.sk.itf.weixin.service.impl.WeiXinItfServiceV2Itf#queryDoc(com.rjkx.sk.system.datastructure.Dto)
	  */
	
	@Override
	public ResultDataBean queryDoc(Dto pDto) throws Exception 
	{
		ResultDataBean data = null;
		
		if(pDto.getAsInteger("queryType") == 1)
		{
			data = super.getFredaDao().queryForPage("WxV2.queryTJDoc", "WxV2.queryTJDocCount", pDto);
		}
		else if(pDto.getAsInteger("queryType") == 2)
		{
			data = super.getFredaDao().queryForPage("WxV2.queryZZDoc", "WxV2.queryZZDocCount", pDto);
		}
		else
		{
			data = super.getFredaDao().queryForPage("WxV2.queryQDoc", "WxV2.queryQDocCount", pDto);
		}
		return data;
	}

	/*
	  * <p>Title: loadDocAndSch</p>
	  * <p>Description: </p>
	  * @param pDto
	  * @see com.rjkx.sk.itf.weixin.service.impl.WeiXinItfServiceV2Itf#loadDocAndSch(com.rjkx.sk.system.datastructure.Dto)
	  */
	@SuppressWarnings("unchecked")
	@Override
	public Dto loadDocAndSch(Dto pDto) 
	{
		Dto rDto = (Dto) super.getFredaDao().queryForObject("WxV2.loadDocInfo", pDto);
		
		rDto.put("dateAndWeekList", this.getWeekInfo());
		
		rDto.put("schList", super.getFredaDao().queryForList("WxV2.queryDocSch", pDto));
		
		return rDto;
	}
	/**
	 * 将今天起一个星期的日期\星期几压入一个LIST中..
	  * 
	  * @author wkgi-Rally
	  * @date 2015年12月10日 上午11:21:48
	  * @return
	 */
	@SuppressWarnings("unchecked")
	public List<?> getWeekInfo()
	{
		String[] weekDays = {"日", "一", "二", "三", "四", "五", "六"};
		
		Calendar cal = Calendar.getInstance();
		
		int w = cal.get(Calendar.DAY_OF_WEEK) - 1 , d = cal.get(Calendar.DAY_OF_MONTH) , monthTotal = cal.getActualMaximum(Calendar.DATE);
		
        if (w < 0)  w = 0;
		
		List<Dto> data = new ArrayList<Dto>();
		
		for(int i = 0 ; i < 7 ; i++)
		{
			int a = w+i ,day = d+i;
			Dto row = new BaseDto();
			//判断
        	if(a > 6) a = a-7;
        	if(day > monthTotal) day = day - monthTotal;
			
			row.put("day", day);
			row.put("weekNum", a);
			row.put("weekCh", weekDays[a]);
			
			data.add(row);
		}
		return data;
	}

	/*
	  * <p>Title: createOrder</p>
	  * <p>Description: </p>
	  * @param pDto
	  * @see com.rjkx.sk.itf.weixin.service.impl.WeiXinItfServiceV2Itf#createOrder(com.rjkx.sk.system.datastructure.Dto)
	  */
	@SuppressWarnings("unchecked")
	@Override
	public synchronized boolean createOrder(Dto pDto) 
	{
		if(((Integer)super.getFredaDao().queryForObject("WxV2.isUseForSch", pDto)) > 0)
		{
			return false;
		}
		//查总价,前100名，首单10元
		if(((Dto)super.getFredaDao().queryForObject("WxV2.getPatOrderCount",null)).getAsLong("orderCount")<=100){
			pDto.put("amount",10);
		}else{
			pDto.put("amount", ((Dto)super.getFredaDao().queryForObject("WxV2.getSchAmount", pDto)).getAsString("price"));
		}
		//查患者病情
		pDto.put("psId", ((Dto)super.getFredaDao().queryForObject("WxV2.getPatPsId", pDto)).getAsString("psId"));
		
		try
		{
			return super.getFredaContext().getOrderService().orderCreate(pDto);
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
		return false;
	}
	/*
	  * <p>Title: addVipConsultation</p>
	  * <p>Description: </p>
	  * @param pDto
	  * @see com.rjkx.sk.itf.weixin.service.impl.WeiXinItfServiceV2Itf#addVipConsultation(com.rjkx.sk.system.datastructure.Dto)
	  */
	@Override
	public boolean addVipConsultation(Dto pDto) throws UnsupportedEncodingException 
	{
		this.setDtoParamsCodeToUtf8(pDto);
		
		if(((Integer)super.getFredaDao().queryForObject("WxV2.isJustAddVip", pDto)) > 0)
		{
			return false;
		}
		else
		{
			super.getFredaDao().insert("WxV2.addVipConsultation", pDto);
			
			return true;
		}
	}
	/*
	  * <p>Title: editBalance</p>
	  * <p>Description: </p>
	  * @param pDto
	  * @see com.rjkx.sk.itf.weixin.service.impl.WeiXinItfServiceV2Itf#editBalance(com.rjkx.sk.system.datastructure.Dto)
	  */
	@Override
	@Transactional(propagation=Propagation.REQUIRED)
	public void editBalance(Dto pDto) 
	{
		super.getFredaDao().update("WxV2.editBalance", pDto);
		
		String amount = pDto.getAsString("balanceAdd").replaceAll(" ", "");
		
		if(FredaUtils.isEmpty(pDto.getAsInteger("type")))
		{
			super.getFredaContext().getLogService().addCapitalLog(pDto.getAsInteger("mainUserId"), "", 1, Double.parseDouble(amount), "充值提现");			
		}
	}
	/*
	  * <p>Title: payOrderToNext</p>
	  * <p>Description: </p>
	  * @param pDto
	  * @see com.rjkx.sk.itf.weixin.service.impl.WeiXinItfServiceV2Itf#payOrderToNext(com.rjkx.sk.system.datastructure.Dto)
	  */
	@SuppressWarnings("unchecked")
	@Override
	public boolean payOrderToNext(Dto pDto) 
	{
		pDto.put("orderState", 2);//设置走向..支付成功..
		
		try 
		{
			boolean falg = super.getFredaContext().getOrderService().orderToNext(pDto);
			
			super.getFredaContext().getLogService().addCapitalLog(pDto.getAsInteger("opId"), "", 2, Double.parseDouble("-" + pDto.getAsString("amount")), pDto.getAsString("orderId"));
			
			return falg;
		}
		catch (Exception e) 
		{
			e.printStackTrace();
		}
		return false;
	}

	/*
	  * <p>Title: payBalance</p>
	  * <p>Description: </p>
	  * @param pDto
	  * @see com.rjkx.sk.itf.weixin.service.impl.WeiXinItfServiceV2Itf#payBalance(com.rjkx.sk.system.datastructure.Dto)
	  */
	@Override
	public boolean payBalance(Dto pDto) 
	{
		if(Double.parseDouble((String)super.getFredaDao().queryForObject("WxV2.getBalance", pDto)) >= Double.parseDouble(pDto.getAsString("amount")))
		{
			//修改余额..
			super.getFredaDao().update("WxV2.editBalance", pDto);
			
			return true;
		}
		return false;
	}
	/*
	  * <p>Title: refundToNext</p>
	  * <p>Description: </p>
	  * @param pDto
	  * @see com.rjkx.sk.itf.weixin.service.impl.WeiXinItfServiceV2Itf#refundToNext(com.rjkx.sk.system.datastructure.Dto)
	  */
	@SuppressWarnings("unchecked")
	@Override
	public boolean refundToNext(Dto pDto) 
	{
		pDto.put("orderState", 6);//
		
		try 
		{
			boolean falg = super.getFredaContext().getOrderService().orderToNext(pDto);
			
			super.getFredaContext().getLogService().addCapitalLog(pDto.getAsInteger("opId"), "", 3, Double.parseDouble(pDto.getAsString("refund")), pDto.getAsString("orderId"));
			
			return falg;
		}
		catch (Exception e) 
		{
			e.printStackTrace();
		}
		return false;
	}
	/*
	  * <p>Title: pingFenToNext</p>
	  * <p>Description: </p>
	  * @param pDto
	  * @see com.rjkx.sk.itf.weixin.service.impl.WeiXinItfServiceV2Itf#pingFenToNext(com.rjkx.sk.system.datastructure.Dto)
	  */
	@SuppressWarnings("unchecked")
	@Override
	public boolean pingFenToNext(Dto pDto) 
	{
		pDto.put("orderState", 4);//设置走向流程结束.
		
		try 
		{
			this.setDtoParamsCodeToUtf8(pDto);
			
			boolean falg = super.getFredaContext().getOrderService().orderToNext(pDto);
			
			if(FredaUtils.isNotEmpty(pDto.getAsString("giftId")))
			{
				super.getFredaContext().getLogService().addCapitalLog(pDto.getAsInteger("opId"), "", 4, Double.parseDouble("-" + pDto.getAsString("gAmount")), pDto.getAsString("orderId"));				
			}
			return falg;
		} 
		catch (Exception e) 
		{
			e.printStackTrace();
		}
		
		return false;
	}

	/*
	  * <p>Title: addFeedBack</p>
	  * <p>Description: </p>
	  * @param pDto
	  * @see com.rjkx.sk.itf.weixin.service.impl.WeiXinItfServiceV2Itf#addFeedBack(com.rjkx.sk.system.datastructure.Dto)
	  */
	@Override
	public boolean addFeedBack(Dto pDto) 
	{
		if(((Integer)super.getFredaDao().queryForObject("WxV2.queryFeedBack", pDto)) == 0)
		{
			super.getFredaDao().insert("WxV2.addFeedBack", pDto);
			
			return true;
		}
		else
		{
			return false;
		}
	}
	/*
	  * <p>Title: firstFenXiangAndAddBalance</p>
	  * <p>Description: </p>
	  * @param pDto
	  * @see com.rjkx.sk.itf.weixin.service.impl.WeiXinItfServiceV2Itf#firstFenXiangAndAddBalance(com.rjkx.sk.system.datastructure.Dto)
	  */
	@SuppressWarnings("unchecked")
	@Override
	@Transactional(propagation=Propagation.REQUIRED)
	public boolean firstFenXiangAndAddBalance(Dto pDto) 
	{
		Double amount = (Double)super.getFredaDao().queryForObject("WxV2.isBack", pDto);
		
		if(amount != 0)
		{
			amount=10.0;//固定返10元
			pDto.put("balanceAdd", "+ " + amount);//次处amount是订单的综合..后续将修改这里..改返还规则..不返还则修改成-1
			
			pDto.put("back", amount);
		
			super.getFredaDao().update("WxV2.editBalance", pDto);
				
			super.getFredaDao().update("WxV2.editOrderBack", pDto);
			
			super.getFredaContext().getLogService().addCapitalLog(pDto.getAsInteger("mainUserId"), "", 5, amount, pDto.getAsString("orderId"));
			
			return true;
		}
		return false;
	}
	/*
	  * <p>Title: editSicknessPat</p>
	  * <p>Description: </p>
	  * @param pDto
	  * @see com.rjkx.sk.itf.weixin.service.impl.WeiXinItfServiceV2Itf#editSicknessPat(com.rjkx.sk.system.datastructure.Dto)
	  */
	@SuppressWarnings("unchecked")
	@Override
	@Transactional(propagation=Propagation.REQUIRED)
	public boolean editSicknessPat(Dto pDto)throws Exception 
	{
		String[] sIds = pDto.getAsString("sIds").split(",");
		
		this.setDtoParamsCodeToUtf8(pDto);
		//修改信息
		super.getFredaDao().update("WxV2.editPat", pDto);
		//修改描述
		super.getFredaDao().update("WxV2.editPatSic", pDto);
		//删除关联
		super.getFredaDao().delete("WxV2.delRps", pDto);
		//添加关联疾病数据..
		for(String sId : sIds)
		{
			pDto.put("sId", sId);
			
			super.getFredaDao().insert("WxV2.addSicksForSickInfo", pDto);
		}
		return true;
	}

	/*
	  * <p>Title: getVipOrderPayInfo</p>
	  * <p>Description: </p>
	  * @param pDto
	  * @see com.rjkx.sk.itf.weixin.service.impl.WeiXinItfServiceV2Itf#getVipOrderPayInfo(com.rjkx.sk.system.datastructure.Dto)
	  */
	@Override
	public Dto getVipOrderPayInfo(Dto pDto) 
	{	
		return (Dto) super.getFredaDao().queryForObject("WxV2.getVipOrderPayInfo", pDto);
	}

	/*
	  * <p>Title: payVipCallBack</p>
	  * <p>Description: </p>
	  * @param pDto
	  * @see com.rjkx.sk.itf.weixin.service.impl.WeiXinItfServiceV2Itf#payVipCallBack(com.rjkx.sk.system.datastructure.Dto)
	  */
	@SuppressWarnings("unchecked")
	@Override
	@Transactional(propagation=Propagation.REQUIRED)
	public boolean payVipCallBack(Dto pDto) 
	{
		int payMode = pDto.getAsInteger("payMode");
		
		switch (payMode) 
		{
			case 1 : pDto.put("nextStatus", 3); break;
				
			case 3 : pDto.put("nextStatus", 4); break;
				
			default : break;
		}
		//更新支付成功后的信息.并记录支付日志
		if(super.getFredaDao().update("WxV2.editVipOder", pDto) > 0)//更新信息
		{
			super.getFredaDao().insert("WxV2.addVipPayLog", pDto);//添加支付日志
			
			return true;
		}
		return false;
	}
}
